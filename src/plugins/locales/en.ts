const englishLang = {
  'Enter your dev backend URL': 'Enter your dev backend URL',
  'Path to your validation files': 'Path to your validation files',
  'Full path e.g. /home/user/project/validators/': 'Full path e.g. /home/user/project/validators/',
  'Be sure to point your client to http://localhost:3000': 'Be sure to point your client to http://localhost:3000',
  'API Validation application loaded. Please enter your backend URL and path to validation folder, then press the continue button.': 'API Validation application loaded. Please enter your backend URL and path to validation folder, then press the continue button.',
  'Invalid URL': 'Invalid URL',
  'Invalid path': 'Invalid path',
  'You can now click the continue button': 'You can now click the continue button',
  'Continue button disabled. Please fill out the correct fields': 'Continue button disabled. Please fill out the correct fields',
  'Generate validation for new endpoint(s)': 'Generate validation for new endpoint(s)',
  'Enter URL': 'Enter URL',
  'Your backend URL': 'Your backend URL',
  'Would you like to generate a template for a single endpoint, or automatically generate templates for multiple endpoints?': 'Would you like to generate a template for a single endpoint, or automatically generate templates for multiple endpoints?',
  'WARNING: Choosing multiple endpoint mode could cause some of your existing templates to be overriden. Proceed with caution.': 'WARNING: Choosing multiple endpoint mode could cause some of your existing templates to be overriden. Proceed with caution.',
  Single: 'Single',
  Multiple: 'Multiple',
  'Enter details': 'Enter details',
  'Define variable path params with :type. (e.g. /users/:uuid/user-groups/:number)': 'Define variable path params with :type. (e.g. /users/:uuid/user-groups/:number)',
  'Endpoint name': 'Endpoint name',
  Record: 'Record',
  'Review request template': 'Review request template',
  'Generated request template:': 'Generated request template:',
  basic: 'Basic',
  'as json': 'AS JSON',
  Next: 'Next',
  'No request body for this method. Click next.': 'No request body for this method. Click next.',
  'Review response template': 'Review response template',
  'Generated response template:': 'Generated response template:',
  Save: 'Save',
  "Listening. Send as many requests to as many endpoints as you can, but make sure they're valid! Your templates will be generated based on the requests and responses. Requests that return a status code of >399 will be ignored.": "Listening. Send as many requests to as many endpoints as you can, but make sure they're valid! Your templates will be generated based on the requests and responses. Requests that return a status code of >399 will be ignored.",
  Endpoint: 'Endpoint',
  Method: 'Method',
  'View details': 'View details',
  'Selected) Save': 'Selected) Save',
  Cancel: 'Cancel',
  'Formatting help': 'Formatting help',
  'The following denotes the formatting required when editing your validation template as JSON.': 'The following denotes the formatting required when editing your validation template as JSON.',
  'Template must be valid JSON.': 'Template must be valid JSON.',
  'Key names cannot inherently contain question marks or colons. Adding a question mark to the end of a key denotes that it is optional, i.e. it may be undefined or not present on the object at all.': 'Key names cannot inherently contain question marks or colons. Adding a question mark to the end of a key denotes that it is optional, i.e. it may be undefined or not present on the object at all.',
  'When denoting a type, the following are valid:': 'When denoting a type, the following are valid:',
  'UUIDs are expected to be v4 UUIDs': 'UUIDs are expected to be v4 UUIDs',
  'For non-primitive types (objects and arrays), instead of denoting the type with a string as above (e.g. ': 'For non-primitive types (objects and arrays), instead of denoting the type with a string as above (e.g. ',
  '"id": "uuid"': '"id": "uuid"',
  ') you should denote the type literally, i.e. if id is an object it would be ': ') you should denote the type literally, i.e. if id is an object it would be ',
  '"id": { (..your object here) ..}': '"id": { (..your object here) ..}',
  'Arrays must contain something that indicates what the array should contain. If the array is to contain a primitive type, for instance if it is an array of numbers, you can write an array containing the string containing that type: ': 'Arrays must contain something that indicates what the array should contain. If the array is to contain a primitive type, for instance if it is an array of numbers, you can write an array containing the string containing that type: ',
  '. If the array is to contain non-primitive types, then as above, denote those directly. For example: ': '. If the array is to contain non-primitive types, then as above, denote those directly. For example: ',
  'You may combine multiple primitive types using the | operator. For instance, if ': 'You may combine multiple primitive types using the | operator. For instance, if ',
  'can be either a uuid or a number, you could write: ': 'can be either a uuid or a number, you could write: ',
  'Strings can have a length property to indicate the desired length of the string. See the following examples:': 'Strings can have a length property to indicate the desired length of the string. See the following examples:',
  'String with length more than 0: ': 'String with length more than 0: ',
  'String with length less than 10: ': 'String with length less than 10: ',
  'String with length more than or equal to 10: ': 'String with length more than or equal to 10: ',
  'String with length less than or equal to 10: ': 'String with length less than or equal to 10: ',
  'String with length exactly 4: ': 'String with length exactly 4: ',
  'Request details': 'Request details',
  Request: 'Request',
  Header: 'Header',
  Value: 'Value',
  Response: 'Response',
  'Listening. Please send a ': 'Listening. Please send a ',
  ' request to ': ' request to ',
  'Request received. Please edit your validation template for the request & response': 'Request received. Please edit your validation template for the request & response',
  'object concatenated for performance reasons': 'object concatenated for performance reasons',
  'Your JSON is invalid. Press ctrl+h to view the formatting help': 'Your JSON is invalid. Press ctrl+h to view the formatting help',
  'JSON valid': 'JSON valid',
  'Validation template saved. Dialog closed': 'Validation template saved. Dialog closed',
  'Validation template could not be saved. Dialog closed': 'Validation template could not be saved. Dialog closed',
  ' is down': ' is down',
  'It appears your backend at': 'It appears your backend at',
  Requests: 'Requests',
  Recorder: 'Recorder',
  'Request validation failures': 'Request validation failures',
  'Response validation failures': 'Response validation failures',
  Field: 'Field',
  Issue: 'Issue',
  'Request headers': 'Request headers',
  'Response headers': 'Response headers',
  'Request body': 'Request body',
  'Response body': 'Response body',
  '(Only the first element in long array responses is parsed for performance reasons)': '(Only the first element in long array responses is parsed for performance reasons)',
  'This is the requests view. It consists of all the incoming requests coming in to your backend URL from localhost. It will notify you when a request does not conform to your validation templates.': 'This is the requests view. It consists of all the incoming requests coming in to your backend URL from localhost. It will notify you when a request does not conform to your validation templates.',
}

export default englishLang
