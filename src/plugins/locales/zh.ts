const chineseLang = {
  'Enter your dev backend URL': '請輸入您的後端網址',
  'Path to your validation files': '驗證文件的路徑',
  'Full path e.g. /home/user/project/validators/': '全部的路徑, 例如: /home/user/project/validators/',
  'Be sure to point your client to http://localhost:3000': '記得把您的前端程式指向 http://localhost:3000',
  'API Validation application loaded. Please enter your backend URL and path to validation folder, then press the continue button.': 'API驗證程式已啟動了. 請輸入您的後端網址跟驗證文件的路徑然後點擊下一步按鈕',
  Continue: '下一步',
  'Invalid URL': '您輸入的網址可能有錯誤',
  'Invalid path': '您輸入的路徑可能有錯誤',
  'You can now click the continue button': '您現在已經準備好了, 可以點擊下一步的按鈕',
  'Continue button disabled. Please fill out the correct fields': '下一步按鈕失效, 請輸入正確的資訊',
  'Generate validation for new endpoint(s)': '為新的後端點產生驗證文件',
  'Enter URL': '輸入網址',
  'Your backend URL': '您的後端網址',
  'Would you like to generate a template for a single endpoint, or automatically generate templates for multiple endpoints?': '您想要自己產生一位端點的驗證文件還是自動式產生許多端點的驗證文件?',
  'WARNING: Choosing multiple endpoint mode could cause some of your existing templates to be overwritten. Proceed with caution.': '注意: 自動產生的功能會導致已存在的驗證文件被複寫了. 小心地選擇',
  Single: '單位端點產生模式',
  Multiple: '多位端點自動產生模式',
  'Enter details': '輸入資訊',
  'Define variable path params with :type. (e.g. /users/:uuid/user-groups/:number)': '用 :type , 為了定義可變的路徑參數,請用 :參數種類. 例如: /users/:uuid/user-groups/:number',
  'Endpoint name': '端點名字',
  Record: '開始記錄',
  'Review request template': '查看請求驗證模板',
  'Generated request template:': '產生的請求模板:',
  basic: '基本模式',
  'as json': 'JSON模式',
  Next: '下一步',
  'No request body for this method. Click next.': '這種HTTP方法沒有請求body. 請點擊下一步',
  'Review response template': '查看響應驗證模板',
  'Generated response template:': '產生的響應模板: ',
  Save: '保存',
  "Listening. Send as many requests to as many endpoints as you can, but make sure they're valid! Your templates will be generated based on the requests and responses. Requests that return a status code of >399 will be ignored.": "系統正在聽. 您現在可以開始發送所有端點的請求, 然後驗證文件會自動產生. 本程式會自己不受理大於399的響應狀態碼的請求.",
  Endpoint: '端點',
  Method: 'HTTP方法',
  'View details': '查看仔細',
  'Selected) Save': '個請求/響應已選) 保存',
  Cancel: '取消',
  'Formatting help': 'JSON格式規則幫助',
  'The following denotes the formatting required when editing your validation template as JSON.': '接下來的規則為對於JSON模式編輯驗證模板.',
  'Template must be valid JSON.': '需要正確JSON的模板',
  'Key names cannot inherently contain question marks or colons. Adding a question mark to the end of a key denotes that it is optional, i.e. it may be undefined or not present on the object at all.': 'JSON 物件的屬性名字不能本來包括 「?」 或 「:」 . 加 「?」 在屬性名後面是代表這個屬性的對應值是不需要的, 意思就是如果他的對應值是null或者undefined這不算是一個驗證失敗.',
  'When denoting a type, the following are valid:': '想表示數據類型時, 接下來的數據類型有效: ',
  'UUIDs are expected to be v4 UUIDs': '系統期望 v4 的 UUID',
  'For non-primitive types (objects and arrays), instead of denoting the type with a string as above (e.g. ': '非原始數據類型 (例如 object 或 array) 不要直接用string表示數據類型 (例如: ',
  '"id": "uuid"': '"id": "uuid"',
  ') you should denote the type literally, i.e. if id is an object it would be ': '), 反正您應該直接寫數據的模板. 假如說, 您的數據類型是 object, 您應該這樣寫: ',
  '"id": { (..your object here) ..}': '"id": { (..您的object模板在這裡) ..}',
  'Arrays must contain something that indicates what the array should contain. If the array is to contain a primitive type, for instance if it is an array of numbers, you can write an array containing the string containing that type: ': 'Array定義一定要表示它應該包括的數據類型. 如果Array應該包括原始數據類型, 例如號碼, 您可以直接寫一個 array 包括那個類型的string: ',
  '. If the array is to contain non-primitive types, then as above, denote those directly. For example: ': '. 如果array應給包括非原始數據類型, 那根上面的規則一樣直接表示它. 例如: ',
  'You may combine multiple primitive types using the | operator. For instance, if ': '您可以用 「|」 為了結合多種原始數據類型. 假如說 ',
  'can be either a uuid or a number, you could write: ': ' uuid或數字都可以接受的話, 那您可以寫: ',
  'Strings can have a length property to indicate the desired length of the string. See the following examples:': 'string可以表示它的長度, 用length的屬性字. 查看接下來的例子: ',
  'String with length more than 0: ': '長度大於0的string: ',
  'String with length less than 10: ': '長度少於10的string: ',
  'String with length more than or equal to 10: ': '長度大於10或剛好10個字: ',
  'String with length less than or equal to 10: ': '長度少於10或剛好10個字: ',
  'String with length exactly 4: ': '一定要剛好4個字的string: ',
  'Request details': '請求細節',
  Request: '請求',
  Header: '標頭',
  Value: '對應值',
  Response: '響應',
  'Listening. Please send a ': '系統正在聽. 請發一個 ',
  ' request to ': ' 請求送給 ',
  'Request received. Please edit your validation template for the request & response': '請求收到了. 請編輯請求跟響應的驗證模板',
  'object concatenated for performance reasons': 'object 由於性能原因而串聯',
  'Your JSON is invalid. Press ctrl+h to view the formatting help': '您的JSON是不正確的或者有錯誤. 請點擊ctrl+h 查看JSON格式模板規則',
  'JSON valid': 'JSON正確',
  'Validation template saved. Dialog closed': '驗證文件已保存了. 對話框關閉了',
  'Validation template could not be saved. Dialog closed': '驗證文件沒辦法保存. 對話框關閉了',
  ' is down': ' 好像有問題',
  'It appears your backend at': '您在這個網址的後端',
  Requests: '請求列入',
  Recorder: '產生驗證模板',
  'Request validation failures': '請求驗證失敗',
  'Response validation failures': '響應驗證失敗',
  Field: '屬性',
  Issue: '問題',
  'Request headers': '請求標頭',
  'Response headers': '響應標頭',
  'Request body': '請求的JSON body',
  'Response body': '響應的JSON body',
  '(Only the first element in long array responses is parsed for performance reasons)': '(因為性能的原因, 所以在很長的array響應body只有第一個數據表示出來)',
  'This is the requests view. It consists of all the incoming requests coming in to your backend URL from localhost. It will notify you when a request does not conform to your validation templates.': '您現在看的是請求列入. 它包括所有來自localhost前往後端的請求. 如果一個請求或他的響應失敗您的驗證文件, 它會提醒你.',
  'Increasing any of these numbers significantly may harm performance. You should try to find the right balance that works for your machine.': '一這些數字提高, 本程式的性能也可能越來越慢. 請根據您的電腦能力小心調節.',
  'Amount of array members to perform full validation on in long array responses, where array members are non-primitive (e.g. objects or arrays): ': '以包括非原始類型數據的array來說, 其array裡面的元素要限制多少來作全部性驗證?',
  'Max. length of displayed JSON response bodies: ': '響應JSON body最多顯示字限制: ',
  'Amount of requests to keep in memory: ': '留在內存的最多請求數量: ',
  'Performance settings': '性能設定',
  'GET requests should not have JSON bodies and are therefore ignored': 'GET請求不可有JSON body, 因此本程式不理會GET請求的JSON body',
  'Export as markdown': '下載Markdown',
  'View, edit, or export validation templates': '管理驗證文件',
  Back: '回去'
}

export default chineseLang
